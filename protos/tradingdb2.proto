syntax = "proto3";
package tradingpb;
option go_package = "github.com/zhs007/tradingdb2/tradingpb";
import "trading2.proto";

// Candle - candle
message Candle {
    int64 ts = 1;                   // UTC时间戳
    int64 open = 2;
    int64 close = 3;
    int64 high = 4;
    int64 low = 5;
    int64 volume = 6;
    int64 openInterest = 7;
    int64 trades = 8;
    double vwap = 9;
    int64 lastSize = 10;
    int64 turnover = 11;
    double homeNotional = 12;
    double foreignNotional = 13;
    int64 totalMoney = 14;          // 总金额
    bool paused = 15;               // 是否停盘
    int64 highLimit = 16;           // 上涨限制
    int64 lowLimit = 17;            // 下跌限制
    int64 avg = 18;                 // 平均价格
    int64 preClose = 19;            // 前一天的close价格
}

// Candles - candles
message Candles {
    string market = 1;
    string symbol = 2;
    string tag = 3;
    repeated Candle candles = 4;
    map<int64, Candle> mapCandles = 5;  // 快速检索用，不做传递，本地运算缓存用
}

// FundSize - fund size
message FundSize {
    float size = 1;
    int64 time = 2;
}

// FundManager - fund manager
message FundManager {
    string name = 1;
    int64 startTime = 2;
    int64 endTime = 3;
    int64 birthYear = 4;
    bool sex = 5;
    string education = 6;
    string country = 7;
    string resume = 8;
    repeated FundResult results = 9;
}

message FundResult {
    float maxDrawdown = 1;
    float sharpe = 2;
    float annualizedReturns = 3;
    float annualizedVolatility = 4;
    float totalReturns = 5;
    int64 startTime = 6;
    int64 endTime = 7;
    string name = 8;
}

// Fund - fund
message Fund {
    string code = 1;
    string name = 2;
    repeated string tags = 3;
    int64 createTime = 4;
    repeated FundSize size = 5;
    string company = 6;
    repeated FundManager managers = 7;
    repeated FundResult results = 8;
}

// SymbolInfo - symbol infomation
message SymbolInfo {
    string market = 1;
    string symbol = 2;
    Fund fund = 3;
    string name = 4;            // 名称，一般是缩写
    string fullname = 5;        // 全名，识别性更强的名字
    string type = 6;            // 类型，指数、基金等
}

// RequestUpdCandles - request UpdCandles
message RequestUpdCandles {
    string token = 1 [deprecated = true];
    Candles candles = 2;
    BasicRequestData basicRequest = 3;
}

// ReplyUpdCandles - reply UpdCandles
message ReplyUpdCandles{
    int32 lengthOK = 1;
}

// RequestGetCandles - request GetCandles
message RequestGetCandles {
    string token = 1 [deprecated = true];
    string market = 2;
    string symbol = 3;
    string tag = 4 [deprecated = true];
    int64 tsStart = 5;
    int64 tsEnd = 6;
    repeated string tags = 7;
    BasicRequestData basicRequest = 8;
    int32 offset = 9;                       // 提前多少数据
}

// ReplyGetCandles - reply GetCandles
message ReplyGetCandles{
    Candles candles = 1;
}

// RequestUpdSymbol - request UpdSymbol
message RequestUpdSymbol {
    string token = 1 [deprecated = true];
    SymbolInfo symbol = 2;
    BasicRequestData basicRequest = 3;
}

// ReplyUpdSymbol - reply UpdSymbol
message ReplyUpdSymbol{
    bool isOK = 1;
}

// RequestGetSymbol - request GetSymbol
message RequestGetSymbol {
    string token = 1 [deprecated = true];
    string market = 2;
    string symbol = 3;
    BasicRequestData basicRequest = 4;
}

// ReplyGetSymbol - reply GetSymbol
message ReplyGetSymbol{
    SymbolInfo symbol = 1;
}

// RequestGetSymbols - request GetSymbols
message RequestGetSymbols {
    string token = 1 [deprecated = true];
    string market = 2;
    repeated string symbols = 3;
    BasicRequestData basicRequest = 4;
}

// RequestSimTrading - request simTrading
message RequestSimTrading {
    BasicRequestData basicRequest = 1;
    SimTradingParams params = 2;
    bool ignoreCache = 3;                   // 忽略cache，重新计算
    int32 index = 4;                        // simtradings时用于关联请求结果用的
    float ignoreTotalReturn = 5;            // 忽略总回报低于这个值的数据返回，主要用于大批量训练，减少数据处理量。但实际运算会执行，且cache数据是完整的
    int32 minNums = 6;                      // 被忽略的数据里，还是保留这个条数返回，默认是10
    int32 maxNums = 7 [deprecated = true];  // 最大的消息数量，超过这个数量就不要了，这个不会影响符合ignoreTotalReturn条件的
    string sortBy = 8;                      // 按什么字段来排序，默认是 totalreturn
}

// ReplySimTrading - reply simTrading
message ReplySimTrading {
    repeated PNLData pnl = 1;
    repeated PNLData baseline = 2 [deprecated = true];
    int32 index = 3;
}

// TradingDB2 - TradingDB2 service
service TradingDB2 {
    // updCandles - update candles
    //      这个接口现在是覆盖的，不会和原有数据做任何合并操作
    rpc updCandles(stream RequestUpdCandles) returns (ReplyUpdCandles) {}
	// getCandles - get candles
    rpc getCandles(RequestGetCandles) returns (stream ReplyGetCandles) {}
	// updSymbol - update symbol
    rpc updSymbol(RequestUpdSymbol) returns (ReplyUpdSymbol) {}
	// getSymbol - get symbol
    rpc getSymbol(RequestGetSymbol) returns (ReplyGetSymbol) {}
	// getSymbols - get symbols
    rpc getSymbols(RequestGetSymbols) returns (stream ReplyGetSymbol) {}
    // simTrading - simulation trading
    rpc simTrading(RequestSimTrading) returns (ReplySimTrading) {}
    // simTrading2 - simulation trading
    rpc simTrading2(stream RequestSimTrading) returns (stream ReplySimTrading) {}
}