cmake_minimum_required(VERSION 3.0.0)

include_directories(../../include)
# include_directories(${CMAKE_BINARY_DIR}/deps/glog)

link_directories(../../deps/gsl/build)
link_directories(../../deps/yaml-cpp/build)
link_directories(../../deps/glog/cmakebuild)
link_directories(../../deps/grpc/cmakebuild)
link_directories(../../deps/grpc/cmakebuild/third_party/boringssl-with-bazel)
link_directories(../../deps/grpc/cmakebuild/third_party/abseil-cpp/absl/strings)
link_directories(../../deps/grpc/cmakebuild/third_party/abseil-cpp/absl/time)
link_directories(../../deps/grpc/cmakebuild/third_party/abseil-cpp/absl/base)
link_directories(../../deps/grpc/cmakebuild/third_party/abseil-cpp/absl/types)
link_directories(../../deps/grpc/cmakebuild/third_party/abseil-cpp/absl/numeric)
link_directories(../../deps/grpc/cmakebuild/third_party/protobuf)
link_directories(../../deps/grpc/cmakebuild/third_party/cares/cares/lib)
link_directories(../../deps/zlib/build)
# link_directories(../../deps/grpc/cmakebuild/third_party/zlib)
link_directories(../../deps/ta-lib/src/.libs)

aux_source_directory(. DIR_MAIN_SRCS)

add_executable(tc2serv ${DIR_MAIN_SRCS})

target_link_libraries(tc2serv libtradingcore2)
target_link_libraries(tc2serv libgsl.a)
target_link_libraries(tc2serv libta_lib.a)
target_link_libraries(tc2serv libz.a)
if (UNIX AND NOT APPLE)
  # target_link_libraries(tc2serv libssl.a)
  # target_link_libraries(tc2serv libcrypto.a)
  # target_link_libraries(tc2serv libabsl_time.a)
  # target_link_libraries(tc2serv libabsl_base.a)
  # target_link_libraries(tc2serv libabsl_raw_logging_internal.a)
  # target_link_libraries(tc2serv libabsl_throw_delegate.a)
  # target_link_libraries(tc2serv libabsl_time_zone.a)
  # target_link_libraries(tc2serv libabsl_strings.a)
  # target_link_libraries(tc2serv libabsl_str_format_internal.a)
  # target_link_libraries(tc2serv libabsl_bad_any_cast_impl.a)
  # target_link_libraries(tc2serv libabsl_bad_optional_access.a)
  # target_link_libraries(tc2serv libabsl_bad_variant_access.a)
  # target_link_libraries(tc2serv libabsl_int128.a)  
  # target_link_libraries(tc2serv libcares.a)
  # target_link_libraries(tc2serv libgrpc.a)
  # target_link_libraries(tc2serv libgrpc++_reflection.a)
  # target_link_libraries(tc2serv libgrpc++_unsecure.a)
  # target_link_libraries(tc2serv libgrpc_unsecure.a)
  # target_link_libraries(tc2serv libgrpc++_alts.a)
  # target_link_libraries(tc2serv libgrpc++_error_details.a)
  # target_link_libraries(tc2serv libgrpcpp_channelz.a)
  # target_link_libraries(tc2serv libgpr.a)
  # # target_link_libraries(tc2serv "-framework CoreFoundation")
  # target_link_libraries(tc2serv libprotobuf.a)
  # target_link_libraries(tc2serv libaddress_sorting.a)
  # target_link_libraries(tc2serv libupb.a)
  # target_link_libraries(tc2serv libgrpc++.a)
  target_link_libraries(tc2serv grpc)
  target_link_libraries(tc2serv grpc++)
  target_link_libraries(tc2serv grpc++_reflection)
elseif (APPLE)
  target_link_libraries(tc2serv libgrpc.a)
  target_link_libraries(tc2serv libgrpc++.a)
  target_link_libraries(tc2serv libgrpc++_reflection.a)
  target_link_libraries(tc2serv libssl.a)
  target_link_libraries(tc2serv libcrypto.a)
  target_link_libraries(tc2serv libgpr.a)
  target_link_libraries(tc2serv libabsl_time.a)
  target_link_libraries(tc2serv libabsl_base.a)
  target_link_libraries(tc2serv libabsl_raw_logging_internal.a)
  target_link_libraries(tc2serv libabsl_throw_delegate.a)
  target_link_libraries(tc2serv libabsl_time_zone.a)
  target_link_libraries(tc2serv "-framework CoreFoundation")
  target_link_libraries(tc2serv libabsl_strings.a)
  target_link_libraries(tc2serv libabsl_str_format_internal.a)
  target_link_libraries(tc2serv libabsl_bad_optional_access.a)
  target_link_libraries(tc2serv libabsl_int128.a)
  target_link_libraries(tc2serv libprotobuf.a)
  target_link_libraries(tc2serv libaddress_sorting.a)
  target_link_libraries(tc2serv libcares.a)
  target_link_libraries(tc2serv libupb.a)
endif ()
target_link_libraries(tc2serv librocksdb.a)
target_link_libraries(tc2serv libyaml-cpp.a)
target_link_libraries(tc2serv libglog.a)
target_link_libraries(tc2serv libgflags.a)