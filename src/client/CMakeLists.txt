cmake_minimum_required(VERSION 3.0.0)

include_directories(../../include)
# include_directories(${CMAKE_BINARY_DIR}/deps/glog)
include_directories(../../deps/ta-lib/include)

link_directories(../../deps/gsl/build)
link_directories(../../deps/yaml-cpp/build)
link_directories(../../deps/glog/cmakebuild)
link_directories(../../deps/grpc/cmakebuild)
link_directories(../../deps/grpc/cmakebuild/third_party/boringssl-with-bazel)
link_directories(../../deps/grpc/cmakebuild/third_party/abseil-cpp/absl/strings)
link_directories(../../deps/grpc/cmakebuild/third_party/abseil-cpp/absl/time)
link_directories(../../deps/grpc/cmakebuild/third_party/abseil-cpp/absl/base)
link_directories(../../deps/grpc/cmakebuild/third_party/abseil-cpp/absl/types)
link_directories(../../deps/grpc/cmakebuild/third_party/abseil-cpp/absl/numeric)
link_directories(../../deps/grpc/cmakebuild/third_party/protobuf)
link_directories(../../deps/grpc/cmakebuild/third_party/cares/cares/lib)
link_directories(../../deps/zlib/build)
link_directories(../../deps/ta-lib/src/.libs)

aux_source_directory(. DIR_MAIN_SRCS)

add_executable(tc2client ${DIR_MAIN_SRCS})

target_link_libraries(tc2client libtradingcore2)
target_link_libraries(tc2client libgsl.a)
target_link_libraries(tc2client libta_lib.a)
target_link_libraries(tc2client libz.a)
if (UNIX AND NOT APPLE)
  target_link_libraries(tc2client grpc)
  target_link_libraries(tc2client grpc++)
  target_link_libraries(tc2client grpc++_reflection)
elseif (APPLE)
  target_link_libraries(tc2client libgrpc.a)
  target_link_libraries(tc2client libgrpc++.a)
  target_link_libraries(tc2client libgrpc++_reflection.a)
  target_link_libraries(tc2client libssl.a)
  target_link_libraries(tc2client libcrypto.a)
  target_link_libraries(tc2client libgpr.a)
  target_link_libraries(tc2client libabsl_time.a)
  target_link_libraries(tc2client libabsl_base.a)
  target_link_libraries(tc2client libabsl_raw_logging_internal.a)
  target_link_libraries(tc2client libabsl_throw_delegate.a)
  target_link_libraries(tc2client libabsl_time_zone.a)
  target_link_libraries(tc2client "-framework CoreFoundation")
  target_link_libraries(tc2client libabsl_strings.a)
  target_link_libraries(tc2client libabsl_str_format_internal.a)
  target_link_libraries(tc2client libabsl_bad_optional_access.a)
  target_link_libraries(tc2client libabsl_int128.a)
  target_link_libraries(tc2client libprotobuf.a)
  target_link_libraries(tc2client libaddress_sorting.a)
  target_link_libraries(tc2client libcares.a)
  target_link_libraries(tc2client libupb.a)
endif ()
target_link_libraries(tc2client librocksdb.a)
target_link_libraries(tc2client libyaml-cpp.a)
target_link_libraries(tc2client libglog.a)
target_link_libraries(tc2client libgflags.a)
